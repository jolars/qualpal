name: Build-and-test

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, macos-13]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y \
            build-essential \
            catch2

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install eigen catch2

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install mingw
          vcpkg install catch2 --triplet x64-mingw-dynamic

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0
        with:
          cmake-version: "3.25"

      - name: Configure CMake
        run: cmake -B build -S . -DBUILD_TESTING=ON ${{ runner.os == 'Windows' && '-G "MinGW Makefiles" -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-mingw-dynamic' || '' }}

      - name: Build
        run: cmake --build build

      - name: Install
        run: ${{ runner.os == 'Windows' && 'cmake --install build' || 'sudo cmake --install build' }}

      - name: Test
        run: ctest --test-dir build --output-on-failure

  docs:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y build-essential doxygen

      - uses: actions/setup-python@v5

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0
        with:
          cmake-version: "3.25"

      - name: Configure CMake
        run: cmake -B build -S . -DBUILD_DOCS=ON -DBUILD_TESTING=OFF

      - name: Build
        run: cmake --build build
